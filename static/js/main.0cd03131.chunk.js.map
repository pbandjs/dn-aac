{"version":3,"sources":["utils/speak.js","utils/debounce.js","screens/HomeAltOne.js","App.js","serviceWorker.js","index.js","api/builtins.js"],"names":["speak","phrase","voices","window","speechSynthesis","getVoices","msg","SpeechSynthesisUtterance","i","length","name","voice","debounce","func","wait","timeout","args","later","clearTimeout","setTimeout","HomeAltOne","useState","selectedGroupIndex","setSelectedGroupIndex","composed","setComposed","inputRef","useRef","debouncedSpeak","debouncedCompose","current","focus","selectedGroup","groups","groupWidth","phraseGroups","reduce","max","curr","phrases","groupHeight","mode","columnWidth","columnHeight","useEffect","className","map","g","key","selectedClass","tabClass","style","tabStyle","onClick","e","preventDefault","onContextMenu","Fragment","height","options","type","value","ref","toLowerCase","phraseGroup","j","width","isDummy","class","icon","pronounce","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports","slice"],"mappings":"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","file":"static/js/main.0cd03131.chunk.js","sourcesContent":["function speak(phrase) {\n  const synth = window.speechSynthesis\n  const voices = synth.getVoices()\n  // console.log(voices)\n  let msg = new SpeechSynthesisUtterance(phrase)\n  // msg.pitch = 0.9\n  for (let i = 0; i < voices.length; i++) {\n    if (voices[i].name === \"Alex\") {\n      // console.log(\"Voice found:\", voices[i])\n      msg.voice = voices[i]\n      break\n    }\n  }\n  window.speechSynthesis.speak(msg)\n}\n\nexport default speak\n","const debounce = (func, wait) => {\n  let timeout\n\n  return function executedFunction(...args) {\n    const later = () => {\n      timeout = null\n      func(...args)\n    }\n\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n  }\n}\n\nexport default debounce\n","import React, { useState, useRef, useEffect } from \"react\"\nimport \"../styles/HomeAltOne.css\"\nimport { groups } from \"../api/builtins\"\nimport speak from \"../utils/speak\"\nimport debounce from \"../utils/debounce\"\nimport Twemoji from \"react-twemoji\"\n\nfunction HomeAltOne() {\n  const [selectedGroupIndex, setSelectedGroupIndex] = useState(0)\n  const [composed, setComposed] = useState(\"\")\n  const inputRef = useRef()\n  const debouncedSpeak = debounce(phrase => {\n    speak(phrase)\n  }, 900)\n\n  const debouncedCompose = debounce(phrase => {\n    setComposed(phrase)\n    inputRef.current.focus()\n  }, 500)\n\n  const selectedGroup = groups[selectedGroupIndex]\n\n  const groupWidth = selectedGroup.phraseGroups.reduce((max, curr) => {\n    if (curr.phrases.length > max) {\n      return curr.phrases.length\n    } else {\n      return max\n    }\n  }, 0)\n\n  const groupHeight = selectedGroup.phraseGroups.length + (selectedGroup.mode === \"compose\" ? 1 : 0)\n\n  // console.log(groupLength)\n\n  const columnWidth = 100 / groupWidth\n  const columnHeight = 100 / groupHeight\n  // console.log(columnWidth)\n\n  useEffect(\n    () => {\n      inputRef.current && inputRef.current.focus()\n    },\n    [inputRef]\n  )\n\n  return (\n    <div className=\"Home\">\n      <div className=\"Tabs\">\n        {groups.map((g, i) => (\n          <div className=\"Tab-container\" key={\"g-\" + i}>\n            <div\n              className={\"Tab \" + (selectedGroupIndex === i ? g.selectedClass : \"\") + \" \" + g.tabClass}\n              style={g.tabStyle || {}}\n              onClick={e => {\n                e.preventDefault()\n                setSelectedGroupIndex(i)\n              }}\n              onContextMenu={e => {\n                e.preventDefault()\n                setSelectedGroupIndex(i)\n              }}\n            >\n              {g.name}\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className={\"Main \" + (selectedGroup.mode === \"compose\" ? \"column\" : \"\")}>\n        {selectedGroup.mode === \"compose\" ? (\n          <React.Fragment>\n            <div key={\"Phrase-composed\"} className=\"Row\" style={{ height: columnHeight + \"%\" }}>\n              <div\n                className=\"clear-composed\"\n                onClick={() => {\n                  setComposed(\"\")\n                }}\n              >\n                <Twemoji options={{ className: \"emoji\" }}>\n                  <span>✖️</span>\n                </Twemoji>\n              </div>\n\n              <div\n                className=\"composed-phrase\"\n                onClick={() => {\n                  setComposed(\"\")\n                }}\n              >\n                <input type=\"text\" value={composed} ref={inputRef} />\n              </div>\n\n              <div className=\"speak-composed\">\n                <div\n                  className=\"speak-composed-button\"\n                  onClick={e => {\n                    debouncedSpeak(composed.toLowerCase())\n                  }}\n                  onContextMenu={e => {\n                    e.preventDefault()\n                    debouncedSpeak(composed.toLowerCase())\n                  }}\n                >\n                  <Twemoji options={{ className: \"emoji\" }}>\n                    <span>🔊</span>\n                  </Twemoji>\n                </div>\n              </div>\n            </div>\n\n            {selectedGroup.phraseGroups.map((phraseGroup, i) => (\n              <div key={\"Phrase-\" + i} className=\"Row\" style={{ height: columnHeight + \"%\" }}>\n                {phraseGroup.phrases.map((phrase, j) => (\n                  <div key={\"Phrase-\" + j} className={\"Cell\"} style={{ width: columnWidth + \"%\" }}>\n                    <div\n                      className={\"Card \" + (phrase.isDummy ? \"dummy \" : \"\") + (phrase.class || phraseGroup.class) || \"\"}\n                      onClick={e => {\n                        e.preventDefault()\n                        debouncedCompose(phrase.value ? phrase.value(composed) : composed + phrase.phrase)\n                      }}\n                      onContextMenu={e => {\n                        e.preventDefault()\n                        debouncedCompose(phrase.value ? phrase.value(composed) : composed + phrase.phrase)\n                      }}\n                    >\n                      {!!phrase.icon && (\n                        <Twemoji options={{ className: \"emoji\" }}>\n                          <span>{phrase.icon}</span>\n                        </Twemoji>\n                      )}\n                      {phrase.phrase}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ))}\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            {selectedGroup.phraseGroups.map((phraseGroup, i) => (\n              <div key={\"Phrase-\" + i} className=\"Row\" style={{ height: columnHeight + \"%\" }}>\n                {phraseGroup.phrases.map((phrase, j) => (\n                  <div key={\"Phrase-\" + j} className=\"Cell\" style={{ width: columnWidth + \"%\" }}>\n                    <div\n                      className={\"Card \" + (phrase.class || phraseGroup.class) || \"\"}\n                      onClick={e => {\n                        e.preventDefault()\n                        debouncedSpeak(phrase.pronounce || phrase.phrase)\n                      }}\n                      onContextMenu={e => {\n                        e.preventDefault()\n                        debouncedSpeak(phrase.pronounce || phrase.phrase)\n                      }}\n                    >\n                      {!!phrase.icon && (\n                        <Twemoji options={{ className: \"emoji\" }}>\n                          <span>{phrase.icon}</span>\n                        </Twemoji>\n                      )}\n                      {phrase.phrase}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ))}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default HomeAltOne\n","import React from \"react\"\nimport \"./App.css\"\n// import Home from \"./screens/Home\"\nimport HomeAltOne from \"./screens/HomeAltOne\"\n// import HomeAltTwo from \"./screens/HomeAltTwo\"\n// import HomeAltThree from \"./screens/HomeAltThree\"\n// import HomeAltFour from \"./screens/HomeAltFour\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomeAltOne />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nif (window.speechSynthesis) {\n  window.speechSynthesis.getVoices()\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// const colors = {\n//   blue: {\n//     \"100\": \"#99D6FF\",\n//     \"400\": \"#0093F5\",\n//     \"800\": \"#00568F\"\n//   },\n//   purple: {\n//     \"100\": \"#F5F3F6\",\n//     \"400\": \"#7E6B8F\",\n//     \"800\": \"#52465D\"\n//   },\n//   green: {\n//     \"100\": \"#EEFBF3\",\n//     \"400\": \"#96E6B3\",\n//     \"800\": \"#39D070\"\n//   },\n//   red: {\n//     \"100\": \"#E78895\",\n//     \"400\": \"#DA3E52\",\n//     \"800\": \"#891A29\"\n//   },\n//   yellow: {\n//     \"100\": \"#F9F6B3\",\n//     \"400\": \"#F2E94E\",\n//     \"800\": \"#E4D911\"\n//   },\n//   text: {\n//     light: \"#ffffff\",\n//     dark: \"#000000\"\n//   }\n// }\n\n// const phrases = [\n//   [\"Call\", \"Maya\", \"Murugan\", \"Kamal\", \"Bijay\", \"Subhash\", \"Samson\"],\n//   [\"Pinky\", \"Sushila\", \"Sunder\", \"Tikaram\", \"Call Dubey\", \"Sunshine\", \"Duke\"],\n//   [\"Wash Room\", \"Sleep\", \"Massage\", \"Stop\", \"Biscuit\", \"Dolly\", \"Billy\"],\n//   [\"Bicycle\", \"Pain\", \"Shave\", \"Want Haircut\", \"Itching\", \"I don't agree\", \"I agree\"],\n//   [\"Hey\", \"What's up\", \"How's it going\", \"Come here\", \"Tell me more\", \"Give it to me\", \"What's the news\"]\n// ]\n\nconst groups = [\n  {\n    name: \"CALL\",\n    tabClass: \"dark-text border-blue-400 background-blue-100 hover-blue-400\",\n    selectedClass: \"background-blue-400\",\n    phraseGroups: [\n      {\n        class: \"border-green-400 background-green-100 hover-green-400 \",\n        phrases: [\n          { phrase: \"MAYA\", class: \"\" },\n          { phrase: \"MANJU\", class: \"\", pronounce: \"Muhnjew\" },\n          { phrase: \"RAMNI\", class: \"\", pronounce: \"Rum-knee\" },\n          { phrase: \"LALIT\", class: \"\", pronounce: \"Lahlith\" }\n        ]\n      },\n      {\n        class: \"border-yellow-400 background-yellow-100 hover-yellow-400\",\n        phrases: [\n          { phrase: \"SUNDER\", class: \"\" },\n          { phrase: \"MURUGAN\", class: \"\", pronounce: \"Mooroogan\" },\n          { phrase: \"KAMAL\", class: \"\" },\n          { phrase: \"BJ\", class: \"\", pronounce: \"Bejay\" }\n        ]\n      },\n      {\n        class: \"border-yellow-400 background-yellow-100 hover-yellow-400\",\n        phrases: [\n          { phrase: \"SUBHASH\", class: \"\", pronounce: \"Subhash\" },\n          { phrase: \"PINKY\", class: \"\" },\n          { phrase: \"SUSHILA\", class: \"\", pronounce: \"Sosheela\" },\n          { phrase: \"DUBEY\", class: \"border-purple-400 background-purple-100 hover-purple-400\", pronounce: \"Dubay\" }\n        ]\n      },\n      {\n        class: \"border-purple-400 background-purple-100 hover-purple-400\",\n        phrases: [\n          { phrase: \"SAMSON\", class: \"border-purple-400 background-purple-100 hover-purple-400\" },\n          { phrase: \"KISHORI\", class: \"\", pronounce: \"Kishohri\" },\n          { phrase: \"TIKARAM\", class: \"\", pronounce: \"Tikaram\" },\n\n          { phrase: \"DUKE\", class: \"border-red-400 background-red-100 hover-red-400\" }\n        ]\n      },\n      {\n        class: \"border-red-400 background-red-100 hover-red-400\",\n        phrases: [{ phrase: \"SUNSHINE\", class: \"\" }, { phrase: \"DOLLY\", class: \"\" }, { phrase: \"BILLY\", class: \"\" }]\n      }\n    ]\n  },\n  {\n    name: \"CONVERSE\",\n    tabClass: \"dark-text border-blue-400 background-blue-100 hover-blue-400\",\n    selectedClass: \"background-blue-400\",\n    phraseGroups: [\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [{ phrase: \"HEY\", class: \"\" }, { phrase: \"WHAT'S UP?\", class: \"\" }, { phrase: \"HOW ARE YOU?\", class: \"\" }]\n      },\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          { phrase: \"WHAT'S THE NEWS?\", class: \"\" },\n          { phrase: \"HOW'S FAMILY?\", class: \"\" },\n          { phrase: \"HOW'S WORK?\", class: \"\" },\n          { phrase: \"HOW'S SCHOOL?\", class: \"\" }\n        ]\n      },\n      {\n        class: \"border-yellow-400 background-yellow-100 hover-yellow-400\",\n        phrases: [\n          { phrase: \"HOW'S THE WEATHER?\", class: \"\" },\n          { phrase: \"LET'S SIT OUTSIDE\", class: \"\" },\n          { phrase: \"WHAT WOULD YOU LIKE TO HAVE?\", class: \"\" },\n          { phrase: \"THE TREE IS IN BLOOM\", class: \"\" }\n        ]\n      },\n      {\n        class: \"border-red-400 background-red-100 hover-red-400\",\n        phrases: [\n          { phrase: \"BYE, TAKE CARE\", class: \"\", pronounce: \"Bye, Take Care\" },\n          { phrase: \"COME AGAIN\", class: \"\" },\n          { phrase: \"GOOD NIGHT\", class: \"\" }\n        ]\n      }\n    ]\n  },\n  {\n    name: \"FEEL\",\n    tabClass: \"dark-text border-blue-400 background-blue-100 hover-blue-400\",\n    selectedClass: \"background-blue-400\",\n    phraseGroups: [\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          { phrase: \"I'M HAPPY\", class: \"\", icon: \"😀\" },\n          { phrase: \"I'M GOOD\", class: \"\", icon: \"🙂\" },\n          { phrase: \"COOL\", class: \"\", icon: \"😎\" },\n          { phrase: \"I'M EXCITED\", class: \"\", icon: \"😄\" },\n          { phrase: \"I'M FINE\", icon: \"🙂\", class: \"\" }\n        ]\n      },\n      {\n        class: \"border-yellow-400 background-yellow-100 hover-yellow-400\",\n        phrases: [\n          { phrase: \"I'M HUNGRY\", class: \"\", icon: \"🍽️\" },\n          { phrase: \"I'M IN PAIN\", class: \"\", icon: \"🤕\" },\n          { phrase: \"I'M TIRED\", class: \"\", icon: \"😫\" },\n          { phrase: \"I'M SLEEPY\", class: \"\", icon: \"😴\" },\n          { phrase: \"I'M ITCHY\", class: \"\", icon: \"🖐️\" }\n        ]\n      },\n      {\n        class: \"border-red-400 background-red-100 hover-red-400\",\n        phrases: [\n          { phrase: \"I'M ANGRY\", class: \"\", icon: \"😠\" },\n          { phrase: \"I'M SAD\", class: \"\", icon: \"😔\", pronounce: \"I'm Sad\" },\n          { phrase: \"I'M CONFUSED\", class: \"\", icon: \"😕\" },\n          { phrase: \"I'M FRUSTRATED\", class: \"\", icon: \"😒\" }\n        ]\n      }\n    ]\n  },\n  {\n    name: \"ALPHABETS\",\n    mode: \"compose\",\n    tabClass: \"dark-text border-blue-400 background-blue-100 hover-blue-400\",\n    selectedClass: \"background-blue-400\",\n    phraseGroups: [\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          { phrase: \"A\", class: \"\" },\n          { phrase: \"B\", class: \"\" },\n          { phrase: \"C\", class: \"\" },\n          { phrase: \"D\", class: \"\" },\n          { phrase: \"E\", class: \"\" },\n          { phrase: \"F\", class: \"\" }\n        ]\n      },\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          { phrase: \"G\", class: \"\" },\n          { phrase: \"H\", class: \"\" },\n          { phrase: \"I\", class: \"\" },\n          { phrase: \"J\", class: \"\" },\n          { phrase: \"K\", class: \"\" },\n          { phrase: \"L\", class: \"\" }\n        ]\n      },\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          { phrase: \"M\", class: \"\" },\n          { phrase: \"N\", class: \"\" },\n          { phrase: \"O\", class: \"\" },\n          { phrase: \"P\", class: \"\" },\n          { phrase: \"Q\", class: \"\" },\n          { phrase: \"R\", class: \"\" }\n        ]\n      },\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          { phrase: \"S\", class: \"\" },\n          { phrase: \"T\", class: \"\" },\n          { phrase: \"U\", class: \"\" },\n          { phrase: \"V\", class: \"\" },\n          { phrase: \"W\", class: \"\" },\n          { phrase: \"X\", class: \"\" }\n        ]\n      },\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          { phrase: \"Y\", class: \"\" },\n          { phrase: \"Z\", class: \"\" },\n          { phrase: \",\", class: \"\" },\n          {\n            phrase: \"SPACE\",\n            value: phrase => {\n              return phrase + \" \"\n            },\n            class: \"\"\n          },\n          { phrase: \"\", class: \"\", isDummy: true },\n          {\n            phrase: \"BACKSPACE\",\n            value: phrase => {\n              return phrase.slice(0, phrase.length - 1)\n            },\n            class: \"\"\n          }\n        ]\n      }\n    ]\n  }\n]\n\nmodule.exports = {\n  // phrases,\n  groups\n}\n"],"sourceRoot":""}