{"version":3,"sources":["utils/speak.js","utils/debounce.js","screens/HomeAltOne.js","App.js","serviceWorker.js","index.js","api/builtins.js"],"names":["speak","phrase","voices","window","speechSynthesis","getVoices","msg","SpeechSynthesisUtterance","i","length","name","voice","debounce","func","wait","timeout","args","later","clearTimeout","setTimeout","HomeAltOne","useState","selectedGroupIndex","setSelectedGroupIndex","debouncedSpeak","selectedGroup","groups","groupWidth","phraseGroups","reduce","max","curr","phrases","groupHeight","columnWidth","columnHeight","className","map","g","key","selectedClass","tabClass","style","tabStyle","onClick","e","preventDefault","onContextMenu","phraseGroup","height","j","width","class","pronounce","icon","options","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.99821279.chunk.js","sourcesContent":["function speak(phrase) {\n  const synth = window.speechSynthesis\n  const voices = synth.getVoices()\n  // console.log(voices)\n  let msg = new SpeechSynthesisUtterance(phrase)\n  // msg.pitch = 0.9\n  for (let i = 0; i < voices.length; i++) {\n    if (voices[i].name === \"Alex\") {\n      // console.log(\"Voice found:\", voices[i])\n      msg.voice = voices[i]\n      break\n    }\n  }\n  window.speechSynthesis.speak(msg)\n}\n\nexport default speak\n","const debounce = (func, wait) => {\n  let timeout\n\n  return function executedFunction(...args) {\n    const later = () => {\n      timeout = null\n      func(...args)\n    }\n\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n  }\n}\n\nexport default debounce\n","import React, { useState } from \"react\"\nimport \"../styles/HomeAltOne.css\"\nimport { groups } from \"../api/builtins\"\nimport speak from \"../utils/speak\"\nimport debounce from \"../utils/debounce\"\nimport Twemoji from \"react-twemoji\"\n\nfunction HomeAltOne() {\n  const [selectedGroupIndex, setSelectedGroupIndex] = useState(0)\n  const debouncedSpeak = debounce(phrase => {\n    speak(phrase)\n  }, 900)\n\n  const selectedGroup = groups[selectedGroupIndex]\n\n  const groupWidth = selectedGroup.phraseGroups.reduce((max, curr) => {\n    if (curr.phrases.length > max) {\n      return curr.phrases.length\n    } else {\n      return max\n    }\n  }, 0)\n\n  const groupHeight = selectedGroup.phraseGroups.length\n\n  // console.log(groupLength)\n\n  const columnWidth = 100 / groupWidth\n  const columnHeight = 100 / groupHeight\n  // console.log(columnWidth)\n\n  return (\n    <div className=\"Home\">\n      <div className=\"Tabs\">\n        {groups.map((g, i) => (\n          <div className=\"Tab-container\" key={\"g-\" + i}>\n            <div\n              className={\"Tab \" + (selectedGroupIndex === i ? g.selectedClass : \"\") + \" \" + g.tabClass}\n              style={g.tabStyle || {}}\n              onClick={e => {\n                e.preventDefault()\n                setSelectedGroupIndex(i)\n              }}\n              onContextMenu={e => {\n                e.preventDefault()\n                setSelectedGroupIndex(i)\n              }}\n            >\n              {g.name}\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"Main \">\n        {selectedGroup.phraseGroups.map((phraseGroup, i) => (\n          <div key={\"Phrase-\" + i} className=\"Row\" style={{ height: columnHeight + \"%\" }}>\n            {phraseGroup.phrases.map((phrase, j) => (\n              <div key={\"Phrase-\" + j} className=\"Cell\" style={{ width: columnWidth + \"%\" }}>\n                <div\n                  className={\"Card \" + (phrase.class || phraseGroup.class) || \"\"}\n                  onClick={e => {\n                    e.preventDefault()\n                    debouncedSpeak(phrase.pronounce || phrase.phrase)\n                  }}\n                  onContextMenu={e => {\n                    e.preventDefault()\n                    debouncedSpeak(phrase.pronounce || phrase.phrase)\n                  }}\n                >\n                  {!!phrase.icon && (\n                    <Twemoji options={{ className: \"emoji\" }}>\n                      <span>{phrase.icon}</span>\n                    </Twemoji>\n                  )}\n                  {phrase.phrase}\n                </div>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default HomeAltOne\n","import React from \"react\"\nimport \"./App.css\"\n// import Home from \"./screens/Home\"\nimport HomeAltOne from \"./screens/HomeAltOne\"\n// import HomeAltTwo from \"./screens/HomeAltTwo\"\n// import HomeAltThree from \"./screens/HomeAltThree\"\n// import HomeAltFour from \"./screens/HomeAltFour\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomeAltOne />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nif (window.speechSynthesis) {\n  window.speechSynthesis.getVoices()\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// const colors = {\n//   blue: {\n//     \"100\": \"#99D6FF\",\n//     \"400\": \"#0093F5\",\n//     \"800\": \"#00568F\"\n//   },\n//   purple: {\n//     \"100\": \"#F5F3F6\",\n//     \"400\": \"#7E6B8F\",\n//     \"800\": \"#52465D\"\n//   },\n//   green: {\n//     \"100\": \"#EEFBF3\",\n//     \"400\": \"#96E6B3\",\n//     \"800\": \"#39D070\"\n//   },\n//   red: {\n//     \"100\": \"#E78895\",\n//     \"400\": \"#DA3E52\",\n//     \"800\": \"#891A29\"\n//   },\n//   yellow: {\n//     \"100\": \"#F9F6B3\",\n//     \"400\": \"#F2E94E\",\n//     \"800\": \"#E4D911\"\n//   },\n//   text: {\n//     light: \"#ffffff\",\n//     dark: \"#000000\"\n//   }\n// }\n\n// const phrases = [\n//   [\"Call\", \"Maya\", \"Murugan\", \"Kamal\", \"Bijay\", \"Subhash\", \"Samson\"],\n//   [\"Pinky\", \"Sushila\", \"Sunder\", \"Tikaram\", \"Call Dubey\", \"Sunshine\", \"Duke\"],\n//   [\"Wash Room\", \"Sleep\", \"Massage\", \"Stop\", \"Biscuit\", \"Dolly\", \"Billy\"],\n//   [\"Bicycle\", \"Pain\", \"Shave\", \"Want Haircut\", \"Itching\", \"I don't agree\", \"I agree\"],\n//   [\"Hey\", \"What's up\", \"How's it going\", \"Come here\", \"Tell me more\", \"Give it to me\", \"What's the news\"]\n// ]\n\nconst groups = [\n  {\n    name: \"CALL\",\n    tabClass: \"dark-text border-blue-400 background-blue-100 hover-blue-400\",\n    selectedClass: \"background-blue-400\",\n    phraseGroups: [\n      {\n        class: \"border-green-400 background-green-100 hover-green-400 \",\n        phrases: [\n          { phrase: \"MAYA\", class: \"\" },\n          { phrase: \"MURUGAN\", class: \"\", pronounce: \"Mooroogan\" },\n          { phrase: \"KAMAL\", class: \"\" },\n          { phrase: \"BIJAY\", class: \"\", pronounce: \"Bejay\" }\n        ]\n      },\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          { phrase: \"SUBHASH\", class: \"\", pronounce: \"Subhash\" },\n          { phrase: \"SAMSON\", class: \"\" },\n          { phrase: \"PINKY\", class: \"\" },\n          { phrase: \"SUSHILA\", class: \"\", pronounce: \"Sosheela\" }\n        ]\n      },\n      {\n        class: \"border-yellow-400 background-yellow-100 hover-yellow-400\",\n        phrases: [\n          { phrase: \"DUBEY\", class: \"\", pronounce: \"Dubay\" },\n          { phrase: \"SUNDER\", class: \"\" },\n          { phrase: \"TIKARAM\", class: \"\", pronounce: \"Tikaram\" },\n          { phrase: \"DUKE\", class: \"border-red-400 background-red-100 hover-red-400\" }\n        ]\n      },\n      {\n        class: \"border-red-400 background-red-100 hover-red-400\",\n        phrases: [{ phrase: \"SUNSHINE\", class: \"\" }, { phrase: \"DOLLY\", class: \"\" }, { phrase: \"BILLY\", class: \"\" }]\n      }\n    ]\n  },\n  {\n    name: \"CONVERSE\",\n    tabClass: \"dark-text border-blue-400 background-blue-100 hover-blue-400\",\n    selectedClass: \"background-blue-400\",\n    phraseGroups: [\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          { phrase: \"HEY\", class: \"\" },\n          { phrase: \"YES\", class: \"\" },\n          { phrase: \"WHAT'S NEW?\", class: \"\" },\n          { phrase: \"HOW ARE YOU?\", class: \"\" }\n        ]\n      },\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          { phrase: \"HOW'S FAMILY?\", class: \"\" },\n          { phrase: \"HOW'S WORK?\", class: \"\" },\n          { phrase: \"HOW'S SCHOOL?\", class: \"\" },\n          { phrase: \"HOW'S THE WEATHER?\", class: \"\" }\n        ]\n      },\n      {\n        class: \"border-yellow-400 background-yellow-100 hover-yellow-400\",\n        phrases: [\n          { phrase: \"LET'S SIT OUTSIDE\", class: \"\" },\n          { phrase: \"WHAT WOULD YOU LIKE TO HAVE?\", class: \"\" },\n          { phrase: \"THE TREE IS IN BLOOM\", class: \"\" }\n        ]\n      },\n      {\n        class: \"border-red-400 background-red-100 hover-red-400\",\n        phrases: [\n          { phrase: \"BYE\", class: \"\", pronounce: \"Bye\" },\n          { phrase: \"SEE YOU\", class: \"\" },\n          { phrase: \"TAKE CARE\", class: \"\" },\n          { phrase: \"COME AGAIN\", class: \"\" }\n        ]\n      }\n    ]\n  },\n  {\n    name: \"FEEL\",\n    tabClass: \"dark-text border-blue-400 background-blue-100 hover-blue-400\",\n    selectedClass: \"background-blue-400\",\n    phraseGroups: [\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          { phrase: \"HAPPY\", class: \"\", icon: \"😀\" },\n          { phrase: \"GOOD\", class: \"\", icon: \"🙂\" },\n          { phrase: \"COOL\", class: \"\", icon: \"😎\" },\n          { phrase: \"EXCITED\", class: \"\", icon: \"😄\" }\n        ]\n      },\n      {\n        class: \"border-yellow-400 background-yellow-100 hover-yellow-400\",\n        phrases: [\n          { phrase: \"HUNGRY\", class: \"\", icon: \"🍽️\" },\n          { phrase: \"PAIN\", class: \"\", icon: \"🤕\" },\n          { phrase: \"TIRED\", class: \"\", icon: \"😫\" },\n          { phrase: \"SLEEPY\", class: \"\", icon: \"😴\" }\n        ]\n      },\n      {\n        class: \"border-red-400 background-red-100 hover-red-400\",\n        phrases: [\n          { phrase: \"ANGRY\", class: \"\", icon: \"😠\" },\n          { phrase: \"SAD\", class: \"\", icon: \"😔\", pronounce: \"Sad\" },\n          { phrase: \"CONFUSED\", class: \"\", icon: \"😕\" },\n          { phrase: \"ANNOYED\", class: \"\", icon: \"😒\" }\n        ]\n      }\n    ]\n  }\n]\n\nmodule.exports = {\n  // phrases,\n  groups\n}\n"],"sourceRoot":""}