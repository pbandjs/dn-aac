{"version":3,"sources":["utils/speak.js","api/builtins.js","screens/HomeAltOne.js","App.js","serviceWorker.js","index.js"],"names":["speak","phrase","console","log","voices","window","speechSynthesis","getVoices","msg","SpeechSynthesisUtterance","i","length","name","voice","groups","tabClass","selectedClass","phraseGroups","class","phrases","debounce","leading","trailing","pronounce","icon","weight","mode","compose","composed","setComposed","value","HomeAltOne","useState","selectedGroupIndex","setSelectedGroupIndex","debouncedSpeak","selectedGroup","groupWidth","reduce","max","curr","groupHeight","columnWidth","columnHeight","className","map","g","key","style","tabStyle","onClick","e","preventDefault","onContextMenu","Fragment","height","options","phraseGroup","j","width","isDummy","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f59c727.chunk.js","sourcesContent":["function speak(phrase) {\n  console.log(\"speaking phrase:\", phrase)\n  const synth = window.speechSynthesis\n  const voices = synth.getVoices()\n  // console.log(voices)\n  let msg = new SpeechSynthesisUtterance(phrase)\n  // msg.pitch = 0.9\n  for (let i = 0; i < voices.length; i++) {\n    if (voices[i].name === \"Alex\") {\n      // console.log(\"Voice found:\", voices[i])\n      msg.voice = voices[i]\n      break\n    }\n  }\n  window.speechSynthesis.speak(msg)\n}\n\nexport default speak\n","import speak from \"../utils/speak\"\nimport debounce from \"lodash.debounce\"\n// const colors = {\n//   blue: {\n//     \"100\": \"#99D6FF\",\n//     \"400\": \"#0093F5\",\n//     \"800\": \"#00568F\"\n//   },\n//   purple: {\n//     \"100\": \"#F5F3F6\",\n//     \"400\": \"#7E6B8F\",\n//     \"800\": \"#52465D\"\n//   },\n//   green: {\n//     \"100\": \"#EEFBF3\",\n//     \"400\": \"#96E6B3\",\n//     \"800\": \"#39D070\"\n//   },\n//   red: {\n//     \"100\": \"#E78895\",\n//     \"400\": \"#DA3E52\",\n//     \"800\": \"#891A29\"\n//   },\n//   yellow: {\n//     \"100\": \"#F9F6B3\",\n//     \"400\": \"#F2E94E\",\n//     \"800\": \"#E4D911\"\n//   },\n//   text: {\n//     light: \"#ffffff\",\n//     dark: \"#000000\"\n//   }\n// }\n\n// const phrases = [\n//   [\"Call\", \"Maya\", \"Murugan\", \"Kamal\", \"Bijay\", \"Subhash\", \"Samson\"],\n//   [\"Pinky\", \"Sushila\", \"Sunder\", \"Tikaram\", \"Call Dubey\", \"Sunshine\", \"Duke\"],\n//   [\"Wash Room\", \"Sleep\", \"Massage\", \"Stop\", \"Biscuit\", \"Dolly\", \"Billy\"],\n//   [\"Bicycle\", \"Pain\", \"Shave\", \"Want Haircut\", \"Itching\", \"I don't agree\", \"I agree\"],\n//   [\"Hey\", \"What's up\", \"How's it going\", \"Come here\", \"Tell me more\", \"Give it to me\", \"What's the news\"]\n// ]\n\nconst groups = [\n  {\n    name: \"CALL\",\n    tabClass: \"dark-text border-blue-400 background-blue-100 hover-blue-400\",\n    selectedClass: \"background-blue-400\",\n    phraseGroups: [\n      {\n        class: \"border-green-400 background-green-100 hover-green-400 \",\n        phrases: [\n          {\n            phrase: \"MAYA\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"Call Maya\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"MANJU\",\n            class: \"\",\n            pronounce: \"Muhnjew\",\n            speak: debounce(\n              () => {\n                speak(\"Call Muhnjew\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"RAMNI\",\n            class: \"\",\n            pronounce: \"Rum-knee\",\n            speak: debounce(\n              () => {\n                speak(\"Call Rumknee\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"LALIT\",\n            class: \"\",\n            pronounce: \"Lahlith\",\n            speak: debounce(\n              () => {\n                speak(\"Call Lahlith\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      },\n      {\n        class: \"border-yellow-400 background-yellow-100 hover-yellow-400\",\n        phrases: [\n          {\n            phrase: \"SUNDER\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"Call Sunder\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"MURUGAN\",\n            class: \"\",\n            pronounce: \"Mooroogan\",\n            speak: debounce(\n              () => {\n                speak(\"Call Moorugan\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"KAMAL\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"Call Kamal\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"BJ\",\n            class: \"\",\n            pronounce: \"Bejay\",\n            speak: debounce(\n              () => {\n                speak(\"Call BJ\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      },\n      {\n        class: \"border-yellow-400 background-yellow-100 hover-yellow-400\",\n        phrases: [\n          {\n            phrase: \"SUBHASH\",\n            class: \"\",\n            pronounce: \"Subhash\",\n            speak: debounce(\n              () => {\n                speak(\"Call Subhash\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"PINKY\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"Call Pinky\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"SUSHILA\",\n            class: \"\",\n            pronounce: \"Sosheela\",\n            speak: debounce(\n              () => {\n                speak(\"Call Sosheela\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"DUBEY\",\n            class: \"border-purple-400 background-purple-100 hover-purple-400\",\n            pronounce: \"Dubay\",\n            speak: debounce(\n              () => {\n                speak(\"Call Dubay\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      },\n      {\n        class: \"border-purple-400 background-purple-100 hover-purple-400\",\n        phrases: [\n          {\n            phrase: \"TIKARAM\",\n            class: \"\",\n            pronounce: \"Tikaram\",\n            speak: debounce(\n              () => {\n                speak(\"Call Tikaram\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"SAMSON\",\n            class: \"border-blue-400 background-blue-100 hover-blue-400\",\n            speak: debounce(\n              () => {\n                speak(\"Call Samson\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"KISHORI\",\n            class: \"border-blue-400 background-blue-100 hover-blue-400\",\n            pronounce: \"Kishohri\",\n            speak: debounce(\n              () => {\n                speak(\"Call Key-shore-e\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n\n          {\n            phrase: \"DUKE\",\n            class: \"border-red-400 background-red-100 hover-red-400\",\n            speak: debounce(\n              () => {\n                speak(\"Call Duke\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      },\n      {\n        class: \"border-red-400 background-red-100 hover-red-400\",\n        phrases: [\n          {\n            phrase: \"SUNSHINE\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"Call Sunshine\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"DOLLY\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"Call Dolly\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"BILLY\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"Call Billy\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      }\n    ]\n  },\n  {\n    name: \"CONVERSE\",\n    tabClass: \"dark-text border-blue-400 background-blue-100 hover-blue-400 text-med\",\n    selectedClass: \"background-blue-400\",\n    phraseGroups: [\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          {\n            phrase: \"HEY\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"Hey\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"WHAT'S UP?\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"What's up?\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"HOW ARE YOU?\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"How are you?\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      },\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          {\n            phrase: \"WHAT'S THE NEWS?\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"What's the news?\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"HOW'S FAMILY?\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"How's family?\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"HOW'S WORK?\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"How's work?\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"HOW'S SCHOOL?\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"How's school?\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      },\n      {\n        class: \"border-yellow-400 background-yellow-100 hover-yellow-400\",\n        phrases: [\n          {\n            phrase: \"HOW'S THE WEATHER?\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"How's the weather?\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"LET'S SIT OUTSIDE\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"Let's sit outside\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"WHAT WOULD YOU LIKE TO HAVE?\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"What would you like to have?\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"THE TREE IS IN BLOOM\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"The tree is in bloom\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      },\n      {\n        class: \"border-red-400 background-red-100 hover-red-400\",\n        phrases: [\n          {\n            phrase: \"BYE, TAKE CARE\",\n            class: \"\",\n            pronounce: \"Bye, Take Care\",\n            speak: debounce(\n              () => {\n                speak(\"Bye, take care\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"COME AGAIN\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"Come Again\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"GOOD NIGHT\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"Good Night\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      }\n    ]\n  },\n  {\n    name: \"FEEL\",\n    tabClass: \"dark-text border-blue-400 background-blue-100 hover-blue-400\",\n    selectedClass: \"background-blue-400\",\n    phraseGroups: [\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          {\n            phrase: \"HAPPY\",\n            class: \"\",\n            icon: \"😀\",\n            speak: debounce(\n              () => {\n                speak(\"I'm happy\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"GOOD\",\n            class: \"\",\n            icon: \"🙂\",\n            speak: debounce(\n              () => {\n                speak(\"I'm good\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"COOL\",\n            class: \"\",\n            icon: \"😎\",\n            speak: debounce(\n              () => {\n                speak(\"Cool\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"EXCITED\",\n            class: \"\",\n            icon: \"😄\",\n            speak: debounce(\n              () => {\n                speak(\"I'm excited\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"FINE\",\n            icon: \"🙂\",\n            class: \"\",\n            speak: debounce(\n              () => {\n                speak(\"I'm fine\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      },\n      {\n        class: \"border-yellow-400 background-yellow-100 hover-yellow-400\",\n        phrases: [\n          {\n            phrase: \"HUNGRY\",\n            class: \"\",\n            icon: \"🍽️\",\n            speak: debounce(\n              () => {\n                speak(\"I'm hungry\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"PAIN\",\n            class: \"\",\n            icon: \"🤕\",\n            speak: debounce(\n              () => {\n                speak(\"I'm in pain\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"TIRED\",\n            class: \"\",\n            icon: \"😫\",\n            speak: debounce(\n              () => {\n                speak(\"I'm tired\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"SLEEPY\",\n            class: \"\",\n            icon: \"😴\",\n            speak: debounce(\n              () => {\n                speak(\"I'm sleepy\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"ITCHY\",\n            class: \"\",\n            icon: \"🖐️\",\n            speak: debounce(\n              () => {\n                speak(\"I'm itchy\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      },\n      {\n        class: \"border-red-400 background-red-100 hover-red-400\",\n        phrases: [\n          {\n            phrase: \"ANGRY\",\n            class: \"\",\n            icon: \"😠\",\n            speak: debounce(\n              () => {\n                speak(\"I'm angry\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"SAD\",\n            class: \"\",\n            icon: \"😔\",\n            pronounce: \"I'm Sad\",\n            speak: debounce(\n              () => {\n                speak(\"I'm sad\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"CONFUSED\",\n            class: \"\",\n            icon: \"😕\",\n            speak: debounce(\n              () => {\n                speak(\"I'm confused\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"FRUSTRATED\",\n            class: \"\",\n            icon: \"😒\",\n            weight: 1.2,\n            speak: debounce(\n              () => {\n                speak(\"I'm frustrated\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      }\n    ]\n  },\n  {\n    name: \"ABC\",\n    mode: \"compose\",\n    tabClass: \"dark-text border-blue-400 background-blue-100 hover-blue-400\",\n    selectedClass: \"background-blue-400\",\n    phraseGroups: [\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          {\n            phrase: \"A\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"A\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"B\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"B\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"C\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"C\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"D\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"D\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"E\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"E\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"F\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"F\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      },\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          {\n            phrase: \"G\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"G\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"H\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"H\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"I\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"I\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"J\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"J\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"K\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"K\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"L\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"L\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      },\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          {\n            phrase: \"M\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"M\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"N\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"N\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"O\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"O\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"P\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"P\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"Q\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"Q\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"R\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"R\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      },\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          {\n            phrase: \"S\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"S\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"T\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"T\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"U\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"U\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"V\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"V\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"W\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"W\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"X\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"X\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      },\n      {\n        class: \"border-green-400 background-green-100 hover-green-400\",\n        phrases: [\n          {\n            phrase: \"Y\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"Y\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"Z\",\n            class: \"\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \"Z\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"SPACE\",\n            value: phrase => {\n              return phrase + \" \"\n            },\n            class: \"\",\n            weight: 3,\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(composed + \" \")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          },\n          {\n            phrase: \"DELETE\",\n            value: phrase => {\n              return \"\"\n            },\n            class: \"border-red-400 background-red-100 hover-red-400\",\n            compose: debounce(\n              (composed, setComposed) => {\n                setComposed(\"\")\n              },\n              2500,\n              { leading: true, trailing: false }\n            )\n          }\n        ]\n      }\n    ]\n  }\n]\n\nexport default groups\n","import React, { useState } from \"react\"\nimport \"../styles/HomeAltOne.css\"\nimport groups from \"../api/builtins\"\nimport speak from \"../utils/speak\"\n// import debounce from \"../utils/debounce\"\nimport debounce from \"lodash.debounce\"\nimport Twemoji from \"react-twemoji\"\n\nfunction HomeAltOne() {\n  const [selectedGroupIndex, setSelectedGroupIndex] = useState(0)\n  const [composed, setComposed] = useState(\"\")\n  const debouncedSpeak = debounce(\n    () => {\n      speak(composed)\n    },\n    2500,\n    { leading: true, trailing: false }\n  )\n  // const debouncedSpeak = useRef(\n  //   debounce(\n  //     phrase => {\n  //       speak(phrase)\n  //     },\n  //     2000,\n  //     { leading: true, trailing: false }\n  //   )\n  // ).current\n  // //\n  // const debouncedCompose = debounce(\n  //   phrase => {\n  //     setComposed(phrase)\n  //     inputRef.current.focus()\n  //   },\n  //   500,\n  //   { leading: true, trailing: false }\n  // )\n\n  // const setComposition = phrase => {\n  //   console.log(\"X\")\n  //   // setComposed(composed + phrase)\n  //   inputRef.current.value = inputRef.current.value + phrase\n  // }\n\n  const selectedGroup = groups[selectedGroupIndex]\n\n  const groupWidth = selectedGroup.phraseGroups.reduce((max, curr) => {\n    if (curr.phrases.length > max) {\n      return curr.phrases.length\n    } else {\n      return max\n    }\n  }, 0)\n\n  const groupHeight = selectedGroup.phraseGroups.length + (selectedGroup.mode === \"compose\" ? 1 : 0)\n\n  // console.log(groupLength)\n\n  const columnWidth = 100 / groupWidth\n  const columnHeight = 100 / groupHeight\n  // console.log(columnWidth)\n\n  // useEffect(\n  //   () => {\n  //     inputRef.current && inputRef.current.focus()\n  //   },\n  //   [inputRef]\n  // )\n\n  return (\n    <div className=\"Home\">\n      <div className=\"Tabs\">\n        {groups.map((g, i) => (\n          <div className=\"Tab-container\" key={\"g-\" + i}>\n            <div\n              className={\"Tab \" + (selectedGroupIndex === i ? g.selectedClass : \"\") + \" \" + g.tabClass}\n              style={g.tabStyle || {}}\n              onClick={e => {\n                e.preventDefault()\n                setSelectedGroupIndex(i)\n              }}\n              onContextMenu={e => {\n                e.preventDefault()\n                setSelectedGroupIndex(i)\n              }}\n            >\n              {g.name}\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className={\"Main \" + (selectedGroup.mode === \"compose\" ? \"column\" : \"\")}>\n        {selectedGroup.mode === \"compose\" ? (\n          <React.Fragment>\n            <div key={\"Phrase-composed\"} className=\"Row\" style={{ height: columnHeight + \"%\" }}>\n              {/*<div\n                className=\"clear-composed\"\n                onClick={() => {\n                  setComposed(\"\")\n                }}\n              >\n                <Twemoji options={{ className: \"emoji\" }}>\n                  <span>✖️</span>\n                </Twemoji>\n              </div>*/}\n\n              <div\n                className=\"composed-phrase\"\n                onClick={() => {\n                  // setComposed(\"\")\n                }}\n              >\n                <div className=\"input\">{composed}</div>\n                {/*<input\n                  type=\"text\"\n                  value={composed}\n                  ref={inputRef}\n                  onFocus={e => {\n                    e.preventDefault()\n                  }}\n                />*/}\n              </div>\n\n              <div className=\"speak-composed\">\n                <div\n                  className=\"speak-composed-button\"\n                  onClick={e => {\n                    // debounce()\n                    debouncedSpeak()\n                  }}\n                  onContextMenu={e => {\n                    e.preventDefault()\n                    debouncedSpeak()\n                  }}\n                >\n                  <Twemoji options={{ className: \"emoji\" }}>\n                    <span>🔊</span>\n                  </Twemoji>\n                </div>\n              </div>\n            </div>\n\n            {selectedGroup.phraseGroups.map((phraseGroup, i) => (\n              <div key={\"Phrase-\" + i} className=\"Row\" style={{ height: columnHeight + \"%\" }}>\n                {phraseGroup.phrases.map((phrase, j) => (\n                  <div key={\"Phrase-\" + j} className={\"Cell\"} style={{ width: columnWidth * (phrase.weight || 1) + \"%\" }}>\n                    <div\n                      className={\"Card \" + (phrase.isDummy ? \"dummy \" : \"\") + (phrase.class || phraseGroup.class) || \"\"}\n                      onClick={e => {\n                        e.preventDefault()\n                        phrase.compose(composed, setComposed)\n                      }}\n                      onContextMenu={e => {\n                        e.preventDefault()\n                        phrase.compose(composed, setComposed)\n                      }}\n                    >\n                      {!!phrase.icon && (\n                        <Twemoji options={{ className: \"emoji\" }}>\n                          <span>{phrase.icon}</span>\n                        </Twemoji>\n                      )}\n                      {phrase.phrase}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ))}\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            {selectedGroup.phraseGroups.map((phraseGroup, i) => (\n              <div key={\"Phrase-\" + i} className=\"Row\" style={{ height: columnHeight + \"%\" }}>\n                {phraseGroup.phrases.map((phrase, j) => (\n                  <div key={\"Phrase-\" + j} className=\"Cell\" style={{ width: columnWidth * (phrase.weight || 1) + \"%\" }}>\n                    <div\n                      className={\"Card \" + (phrase.class || phraseGroup.class) || \"\"}\n                      onClick={e => {\n                        e.preventDefault()\n                        phrase.speak()\n                        // speak(phrase.pronounce || phrase.phrase)\n                        // console.log(phrase)\n                      }}\n                      onContextMenu={e => {\n                        e.preventDefault()\n                        phrase.speak()\n                        // debouncedSpeak(phrase.pronounce || phrase.phrase)\n                      }}\n                    >\n                      {!!phrase.icon && (\n                        <Twemoji options={{ className: \"emoji\" }}>\n                          <span>{phrase.icon}</span>\n                        </Twemoji>\n                      )}\n                      {phrase.phrase}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ))}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default HomeAltOne\n","import React from \"react\"\nimport \"./App.css\"\n// import Home from \"./screens/Home\"\nimport HomeAltOne from \"./screens/HomeAltOne\"\n// import HomeAltTwo from \"./screens/HomeAltTwo\"\n// import HomeAltThree from \"./screens/HomeAltThree\"\n// import HomeAltFour from \"./screens/HomeAltFour\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomeAltOne />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nif (window.speechSynthesis) {\n  window.speechSynthesis.getVoices();\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}